{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst axios = require('axios');\nexport default {\n  data() {\n    return {\n      stripeAPIToken: '<Stripe public key>',\n      stripe: '',\n      token: null,\n      sessionId: null,\n      checkoutBodyArray: []\n    };\n  },\n  name: 'Checkout',\n  props: [\"baseURL\"],\n  methods: {\n    /*\n        Includes Stripe.js dynamically\n    */\n    includeStripe(URL, callback) {\n      let documentTag = document,\n        tag = 'script',\n        object = documentTag.createElement(tag),\n        scriptTag = documentTag.getElementsByTagName(tag)[0];\n      object.src = '//' + URL;\n      if (callback) {\n        object.addEventListener('load', function (e) {\n          callback(null, e);\n        }, false);\n      }\n      scriptTag.parentNode.insertBefore(object, scriptTag);\n    },\n    /*\n        Configures Stripe by setting up the elements and\n        creating the card element.\n    */\n    configureStripe() {\n      /* global Stripe */\n      this.stripe = Stripe(this.stripeAPIToken);\n    },\n    // get all cart Items for the user\n    getAllCartItems() {\n      axios.get(`${this.baseURL}cart/?token=${this.token}`).then(response => {\n        if (response.status == 200) {\n          let cartItems = response.data.cartItems;\n          // for each cart item populate the checkoutBodyArray Array\n          cartItems.forEach(item => {\n            this.checkoutBodyArray.push({\n              productName: item.product.name,\n              quantity: item.quantity,\n              price: item.product.price,\n              productId: item.product.id\n            });\n          });\n        }\n      }, err => {\n        console.log(err);\n      });\n    },\n    // checkout\n    goToCheckout() {\n      // first call the create-checkout-session with checkoutBodyArray\n      axios.post(`${this.baseURL}order/create-checkout-session`, this.checkoutBodyArray).then(response => {\n        // receive the sessionId in response\n        localStorage.setItem(\"sessionId\", response.data.sessionId);\n        return response.data;\n      }).then(session => {\n        // redirect to checkout page of stripe\n        return this.stripe.redirectToCheckout({\n          sessionId: session.sessionId\n        });\n      });\n    }\n  },\n  mounted() {\n    // get the token\n    this.token = localStorage.getItem(\"token\");\n\n    // configure include stripe\n    this.includeStripe('js.stripe.com/v3/', function () {\n      this.configureStripe();\n    }.bind(this));\n\n    // get all the cart items\n    this.getAllCartItems();\n  }\n};","map":{"version":3,"names":["axios","require","data","stripeAPIToken","stripe","token","sessionId","checkoutBodyArray","name","props","methods","includeStripe","URL","callback","documentTag","document","tag","object","createElement","scriptTag","getElementsByTagName","src","addEventListener","e","parentNode","insertBefore","configureStripe","Stripe","getAllCartItems","get","baseURL","then","response","status","cartItems","forEach","item","push","productName","product","quantity","price","productId","id","err","console","log","goToCheckout","post","localStorage","setItem","session","redirectToCheckout","mounted","getItem","bind"],"sources":["/Users/lawrencezhang/Desktop/ecommerce-ui/src/views/Checkout/Checkout.vue"],"sourcesContent":["<template>\n  <div style=\"display: flex; align-items: center; justify-content: center\">\n      <div class=\"div_class\">\n          <h3>You will be redirected to payment page</h3>\n\n          <div class=\"alert alert-primary\" role=\"alert\">\n              While making payment use card number 4242 4242 4242 4242 and enter random cvv(3 digit)\n          </div>\n\n          <button class=\"btn checkout_button\" id=\"proceed-to-checkout\" @click=\"goToCheckout()\">\n              Make payment\n          </button>\n      </div>\n  </div>\n</template>\n<script>\nconst axios = require('axios')\nexport default {\n    data(){\n        return {\n            stripeAPIToken: '<Stripe public key>',\n            stripe: '',\n            token:null,\n            sessionId:null,\n            checkoutBodyArray:[]\n            }\n    },\n\n    name:'Checkout',\n    props:[\"baseURL\"],\n    methods: {\n        /*\n            Includes Stripe.js dynamically\n        */\n        includeStripe( URL, callback ){\n            let documentTag = document, tag = 'script',\n                object = documentTag.createElement(tag),\n                scriptTag = documentTag.getElementsByTagName(tag)[0];\n            object.src = '//' + URL;\n            if (callback) { object.addEventListener('load', function (e) { callback(null, e); }, false); }\n            scriptTag.parentNode.insertBefore(object, scriptTag);\n        },\n\n        /*\n            Configures Stripe by setting up the elements and\n            creating the card element.\n        */\n        configureStripe(){\n            /* global Stripe */\n            this.stripe = Stripe( this.stripeAPIToken );\n        },\n\n        // get all cart Items for the user\n        getAllCartItems(){\n            axios.get(`${this.baseURL}cart/?token=${this.token}`).then((response) => {\n                if(response.status==200){\n                    let cartItems = response.data.cartItems\n                    // for each cart item populate the checkoutBodyArray Array\n                    cartItems.forEach((item) => {\n                        this.checkoutBodyArray.push({\n                            productName: item.product.name,\n                            quantity: item.quantity,\n                            price: item.product.price,\n                            productId: item.product.id\n                        })\n                    })\n                }\n            },err=>{\n                console.log(err)\n            })\n        },\n\n        // checkout\n        goToCheckout(){\n            // first call the create-checkout-session with checkoutBodyArray\n            axios.post(`${this.baseURL}order/create-checkout-session`,\n               this.checkoutBodyArray\n            ).then((response)=>{\n                // receive the sessionId in response\n              localStorage.setItem(\"sessionId\",response.data.sessionId)\n              return response.data\n            }).then((session)=>{\n                // redirect to checkout page of stripe\n               return this.stripe.redirectToCheckout({ sessionId: session.sessionId })\n            })\n        }\n\n    },\n    mounted(){\n        // get the token\n        this.token = localStorage.getItem(\"token\");\n\n        // configure include stripe\n        this.includeStripe('js.stripe.com/v3/', function(){\n            this.configureStripe();\n        }.bind(this) );\n\n        // get all the cart items\n        this.getAllCartItems()\n    },\n}\n\n</script>\n\n <style >\n\n.div_class{\n    margin-top: 5%;\n    width: 50%;\n    align-content: center;\n}\n\n.checkout_button{\n    background-color: #5d3dec;\n    border: none;\n    color: white;\n    padding: 15px 30px;\n    text-align: center;\n    text-decoration: none;\n    font-size: 15px;\n    font-weight: bold;\n    border-radius: 15px;\n}\n\n.checkout_button:focus{\n    outline: none;\n    box-shadow: none;\n}\n\n.checkout_button:disabled{\n    background-color: #9b86f7;\n    border: none;\n    color: white;\n    padding: 15px 30px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 15px;\n    font-weight: bold;\n    border-radius: 15px;\n    cursor:not-allowed;\n}\n\n</style>\n"],"mappings":";AAgBA,MAAMA,KAAI,GAAIC,OAAO,CAAC,OAAO;AAC7B,eAAe;EACXC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,cAAc,EAAE,qBAAqB;MACrCC,MAAM,EAAE,EAAE;MACVC,KAAK,EAAC,IAAI;MACVC,SAAS,EAAC,IAAI;MACdC,iBAAiB,EAAC;IAClB;EACR,CAAC;EAEDC,IAAI,EAAC,UAAU;EACfC,KAAK,EAAC,CAAC,SAAS,CAAC;EACjBC,OAAO,EAAE;IACL;;;IAGAC,aAAaA,CAAEC,GAAG,EAAEC,QAAO,EAAG;MAC1B,IAAIC,WAAU,GAAIC,QAAQ;QAAEC,GAAE,GAAI,QAAQ;QACtCC,MAAK,GAAIH,WAAW,CAACI,aAAa,CAACF,GAAG,CAAC;QACvCG,SAAQ,GAAIL,WAAW,CAACM,oBAAoB,CAACJ,GAAG,CAAC,CAAC,CAAC,CAAC;MACxDC,MAAM,CAACI,GAAE,GAAI,IAAG,GAAIT,GAAG;MACvB,IAAIC,QAAQ,EAAE;QAAEI,MAAM,CAACK,gBAAgB,CAAC,MAAM,EAAE,UAAUC,CAAC,EAAE;UAAEV,QAAQ,CAAC,IAAI,EAAEU,CAAC,CAAC;QAAE,CAAC,EAAE,KAAK,CAAC;MAAE;MAC7FJ,SAAS,CAACK,UAAU,CAACC,YAAY,CAACR,MAAM,EAAEE,SAAS,CAAC;IACxD,CAAC;IAED;;;;IAIAO,eAAeA,CAAA,EAAE;MACb;MACA,IAAI,CAACtB,MAAK,GAAIuB,MAAM,CAAE,IAAI,CAACxB,cAAa,CAAG;IAC/C,CAAC;IAED;IACAyB,eAAeA,CAAA,EAAE;MACb5B,KAAK,CAAC6B,GAAG,CAAE,GAAE,IAAI,CAACC,OAAQ,eAAc,IAAI,CAACzB,KAAM,EAAC,CAAC,CAAC0B,IAAI,CAAEC,QAAQ,IAAK;QACrE,IAAGA,QAAQ,CAACC,MAAM,IAAE,GAAG,EAAC;UACpB,IAAIC,SAAQ,GAAIF,QAAQ,CAAC9B,IAAI,CAACgC,SAAQ;UACtC;UACAA,SAAS,CAACC,OAAO,CAAEC,IAAI,IAAK;YACxB,IAAI,CAAC7B,iBAAiB,CAAC8B,IAAI,CAAC;cACxBC,WAAW,EAAEF,IAAI,CAACG,OAAO,CAAC/B,IAAI;cAC9BgC,QAAQ,EAAEJ,IAAI,CAACI,QAAQ;cACvBC,KAAK,EAAEL,IAAI,CAACG,OAAO,CAACE,KAAK;cACzBC,SAAS,EAAEN,IAAI,CAACG,OAAO,CAACI;YAC5B,CAAC;UACL,CAAC;QACL;MACJ,CAAC,EAACC,GAAG,IAAE;QACHC,OAAO,CAACC,GAAG,CAACF,GAAG;MACnB,CAAC;IACL,CAAC;IAED;IACAG,YAAYA,CAAA,EAAE;MACV;MACA/C,KAAK,CAACgD,IAAI,CAAE,GAAE,IAAI,CAAClB,OAAQ,+BAA8B,EACtD,IAAI,CAACvB,iBAAgB,CACvB,CAACwB,IAAI,CAAEC,QAAQ,IAAG;QACf;QACFiB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAClB,QAAQ,CAAC9B,IAAI,CAACI,SAAS;QACxD,OAAO0B,QAAQ,CAAC9B,IAAG;MACrB,CAAC,CAAC,CAAC6B,IAAI,CAAEoB,OAAO,IAAG;QACf;QACD,OAAO,IAAI,CAAC/C,MAAM,CAACgD,kBAAkB,CAAC;UAAE9C,SAAS,EAAE6C,OAAO,CAAC7C;QAAU,CAAC;MACzE,CAAC;IACL;EAEJ,CAAC;EACD+C,OAAOA,CAAA,EAAE;IACL;IACA,IAAI,CAAChD,KAAI,GAAI4C,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;;IAE1C;IACA,IAAI,CAAC3C,aAAa,CAAC,mBAAmB,EAAE,YAAU;MAC9C,IAAI,CAACe,eAAe,EAAE;IAC1B,CAAC,CAAC6B,IAAI,CAAC,IAAI,EAAG;;IAEd;IACA,IAAI,CAAC3B,eAAe,EAAC;EACzB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}