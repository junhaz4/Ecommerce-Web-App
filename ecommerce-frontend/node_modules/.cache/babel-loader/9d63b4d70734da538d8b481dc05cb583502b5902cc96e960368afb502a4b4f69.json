{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst axios = require(\"axios\");\nexport default {\n  data() {\n    return {\n      stripeAPIToken: \"pk_test_51LQjzgJbdhuCmbNzvcolXqsKnvDOE9ytHwiWlu6zEhD1JwE5pJnkVQwA7rJdA6UtYUczvRiaVuM9b0ej9Zc0H1pO008AG7pmBr\",\n      // we will Initialize the Stripe library in this variable\n      stripe: \"\",\n      token: null,\n      sessionId: null,\n      checkoutBodyArray: []\n    };\n  },\n  name: \"Checkout\",\n  props: [\"baseURL\"],\n  methods: {\n    /*\n            Includes Stripe.js dynamically\n        */\n    includeStripe(URL, callback) {\n      let documentTag = document,\n        tag = \"script\",\n        object = documentTag.createElement(tag),\n        scriptTag = documentTag.getElementsByTagName(tag)[0];\n      object.src = \"//\" + URL;\n      if (callback) {\n        object.addEventListener(\"load\", function (e) {\n          callback(null, e);\n        }, false);\n      }\n      scriptTag.parentNode.insertBefore(object, scriptTag);\n    },\n    /*\n            Configures Stripe by setting up the elements and\n            creating the card element.\n        */\n    configureStripe() {\n      /* global Stripe */\n      this.stripe = Stripe(this.stripeAPIToken);\n    },\n    // get all cart Items for the user\n    getAllCartItems() {\n      axios.get(`${this.baseURL}cart/?token=${this.token}`).then(response => {\n        if (response.status == 200) {\n          let cartItems = response.data.cartItems;\n          // for each cart item populate the checkoutBodyArray Array\n          cartItems.forEach(item => {\n            this.checkoutBodyArray.push({\n              productName: item.product.name,\n              quantity: item.quantity,\n              price: item.product.price,\n              productId: item.product.id\n            });\n          });\n        }\n      }, err => {\n        console.log(err);\n      });\n    },\n    // checkout\n    goToCheckout() {\n      // first call the create-checkout-session with checkoutBodyArray\n      axios.post(`${this.baseURL}order/create-checkout-session`, this.checkoutBodyArray).then(response => {\n        // receive the sessionId in response\n        localStorage.setItem(\"sessionId\", response.data.sessionId);\n        return response.data;\n      }).then(session => {\n        // redirect to checkout page of stripe\n        return this.stripe.redirectToCheckout({\n          sessionId: session.sessionId\n        });\n      });\n    }\n  },\n  mounted() {\n    // get the token\n    this.token = localStorage.getItem(\"token\");\n\n    // configure include stripe\n    this.includeStripe(\"js.stripe.com/v3/\", function () {\n      this.configureStripe();\n    }.bind(this));\n\n    // get all the cart items\n    this.getAllCartItems();\n  }\n};","map":{"version":3,"names":["axios","require","data","stripeAPIToken","stripe","token","sessionId","checkoutBodyArray","name","props","methods","includeStripe","URL","callback","documentTag","document","tag","object","createElement","scriptTag","getElementsByTagName","src","addEventListener","e","parentNode","insertBefore","configureStripe","Stripe","getAllCartItems","get","baseURL","then","response","status","cartItems","forEach","item","push","productName","product","quantity","price","productId","id","err","console","log","goToCheckout","post","localStorage","setItem","session","redirectToCheckout","mounted","getItem","bind"],"sources":["/Users/lawrencezhang/Desktop/ecommerce-ui/src/views/Checkout/Checkout.vue"],"sourcesContent":["<template>\n  <div style=\"display: flex; align-items: center; justify-content: center\">\n    <div class=\"div_class\">\n      <h3>You will be redirected to payment page</h3>\n\n      <div class=\"alert alert-primary\" role=\"alert\">\n        While making payment use card number 4242 4242 4242 4242 and enter\n        random cvv(3 digit)\n      </div>\n\n      <button\n        class=\"btn checkout_button\"\n        id=\"proceed-to-checkout\"\n        @click=\"goToCheckout()\"\n      >\n        Make payment\n      </button>\n    </div>\n  </div>\n</template>\n<script>\nconst axios = require(\"axios\");\nexport default {\n  data() {\n    return {\n      stripeAPIToken:\n        \"pk_test_51LQjzgJbdhuCmbNzvcolXqsKnvDOE9ytHwiWlu6zEhD1JwE5pJnkVQwA7rJdA6UtYUczvRiaVuM9b0ej9Zc0H1pO008AG7pmBr\",\n      // we will Initialize the Stripe library in this variable\n      stripe: \"\",\n      token: null,\n      sessionId: null,\n      checkoutBodyArray: [],\n    };\n  },\n\n  name: \"Checkout\",\n  props: [\"baseURL\"],\n  methods: {\n    /*\n            Includes Stripe.js dynamically\n        */\n    includeStripe(URL, callback) {\n      let documentTag = document,\n        tag = \"script\",\n        object = documentTag.createElement(tag),\n        scriptTag = documentTag.getElementsByTagName(tag)[0];\n      object.src = \"//\" + URL;\n      if (callback) {\n        object.addEventListener(\n          \"load\",\n          function (e) {\n            callback(null, e);\n          },\n          false\n        );\n      }\n      scriptTag.parentNode.insertBefore(object, scriptTag);\n    },\n\n    /*\n            Configures Stripe by setting up the elements and\n            creating the card element.\n        */\n    configureStripe() {\n      /* global Stripe */\n      this.stripe = Stripe(this.stripeAPIToken);\n    },\n\n    // get all cart Items for the user\n    getAllCartItems() {\n      axios.get(`${this.baseURL}cart/?token=${this.token}`).then(\n        (response) => {\n          if (response.status == 200) {\n            let cartItems = response.data.cartItems;\n            // for each cart item populate the checkoutBodyArray Array\n            cartItems.forEach((item) => {\n              this.checkoutBodyArray.push({\n                productName: item.product.name,\n                quantity: item.quantity,\n                price: item.product.price,\n                productId: item.product.id,\n              });\n            });\n          }\n        },\n        (err) => {\n          console.log(err);\n        }\n      );\n    },\n\n    // checkout\n    goToCheckout() {\n      // first call the create-checkout-session with checkoutBodyArray\n      axios\n        .post(\n          `${this.baseURL}order/create-checkout-session`,\n          this.checkoutBodyArray\n        )\n        .then((response) => {\n          // receive the sessionId in response\n          localStorage.setItem(\"sessionId\", response.data.sessionId);\n          return response.data;\n        })\n        .then((session) => {\n          // redirect to checkout page of stripe\n          return this.stripe.redirectToCheckout({\n            sessionId: session.sessionId,\n          });\n        });\n    },\n  },\n  mounted() {\n    // get the token\n    this.token = localStorage.getItem(\"token\");\n\n    // configure include stripe\n    this.includeStripe(\n      \"js.stripe.com/v3/\",\n      function () {\n        this.configureStripe();\n      }.bind(this)\n    );\n\n    // get all the cart items\n    this.getAllCartItems();\n  },\n};\n</script>\n\n<style>\n.div_class {\n  margin-top: 5%;\n  width: 50%;\n  align-content: center;\n}\n\n.checkout_button {\n  background-color: #5d3dec;\n  border: none;\n  color: white;\n  padding: 15px 30px;\n  text-align: center;\n  text-decoration: none;\n  font-size: 15px;\n  font-weight: bold;\n  border-radius: 15px;\n}\n\n.checkout_button:focus {\n  outline: none;\n  box-shadow: none;\n}\n\n.checkout_button:disabled {\n  background-color: #9b86f7;\n  border: none;\n  color: white;\n  padding: 15px 30px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 15px;\n  font-weight: bold;\n  border-radius: 15px;\n  cursor: not-allowed;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}