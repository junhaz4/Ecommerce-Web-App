{"ast":null,"code":"const axios = require('axios');\nimport swal from 'sweetalert';\nexport default {\n  data() {\n    return {\n      id: null,\n      categoryName: null,\n      description: null,\n      imageUrl: null,\n      categoryIndex: null\n    };\n  },\n  props: [\"baseURL\", \"categories\"],\n  methods: {\n    async editCategory() {\n      const updatedCategory = {\n        id: this.id,\n        categoryName: this.categoryName,\n        description: this.description,\n        imageUrl: this.imageUrl\n      };\n      await axios({\n        method: 'post',\n        url: this.baseURL + \"category/update/\" + this.id,\n        data: JSON.stringify(updatedCategory),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(() => {\n        swal({\n          text: \"Category Updated Successfully!\",\n          icon: \"success\",\n          closeOnClickOutside: false\n        });\n      }).catch(err => console.log(err));\n    }\n  },\n  mounted() {\n    this.id = this.$route.params.id;\n    this.category = this.categories.filter(category => category.id == this.id)[0];\n    this.categoryName = this.category.categoryName;\n    this.description = this.category.description;\n    this.imageUrl = this.category.imageUrl;\n  }\n};","map":{"version":3,"names":["axios","require","swal","data","id","categoryName","description","imageUrl","categoryIndex","props","methods","editCategory","updatedCategory","method","url","baseURL","JSON","stringify","headers","then","text","icon","closeOnClickOutside","catch","err","console","log","mounted","$route","params","category","categories","filter"],"sources":["/Users/lawrencezhang/Desktop/ecommerce-ui/src/views/Category/EditCategory.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-12 text-center\">\n        <h4 class=\"pt-3\">Edit Category</h4>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"col-3\"></div>\n      <div class=\"col-md-6 px-5 px-md-0\">\n        <form>\n          <div class=\"form-group\">\n            <label>Category Name</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"categoryName\" required>\n          </div>\n          <div class=\"form-group\">\n            <label>Description</label>\n            <input type=\"text\" class=\"form-control\" v-model=\"description\" required>\n          </div>\n          <div class=\"form-group\">\n            <label>ImageURL</label>\n            <input type=\"url\" class=\"form-control\" v-model=\"imageUrl\" required>\n          </div>\n          <button type=\"button\" class=\"btn btn-primary\" @click=\"editCategory\">Submit</button>\n        </form>\n      </div>\n      <div class=\"col-3\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst axios =  require('axios')\nimport swal from 'sweetalert';\nexport default {\n  data(){\n    return {\n      id : null,\n      categoryName : null,\n      description : null,\n      imageUrl : null,\n      categoryIndex : null\n    }\n  },\n  props : [\"baseURL\", \"categories\"],\n  methods : {\n    async editCategory() {\n      const updatedCategory = {\n        id : this.id,\n        categoryName : this.categoryName,\n        description : this.description,\n        imageUrl : this.imageUrl,\n      }\n\n      await axios({\n        method: 'post',\n        url: this.baseURL+\"category/update/\"+this.id,\n        data : JSON.stringify(updatedCategory),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(() => {\n        swal({\n          text: \"Category Updated Successfully!\",\n          icon: \"success\",\n          closeOnClickOutside: false,\n        });\n      })\n      .catch(err => console.log(err));\n    }\n  },\n  mounted() {\n    this.id = this.$route.params.id;\n    this.category = this.categories.filter(category => category.id == this.id)[0];\n    this.categoryName = this.category.categoryName;\n    this.description = this.category.description;\n    this.imageUrl = this.category.imageUrl;\n  }\n}\n</script>\n\n<style scoped>\nh4 {\n  font-family: 'Roboto', sans-serif;\n  color: #484848;\n  font-weight: 700;\n}\n</style>\n"],"mappings":"AAiCA,MAAMA,KAAI,GAAKC,OAAO,CAAC,OAAO;AAC9B,OAAOC,IAAG,MAAO,YAAY;AAC7B,eAAe;EACbC,IAAIA,CAAA,EAAE;IACJ,OAAO;MACLC,EAAC,EAAI,IAAI;MACTC,YAAW,EAAI,IAAI;MACnBC,WAAU,EAAI,IAAI;MAClBC,QAAO,EAAI,IAAI;MACfC,aAAY,EAAI;IAClB;EACF,CAAC;EACDC,KAAI,EAAI,CAAC,SAAS,EAAE,YAAY,CAAC;EACjCC,OAAM,EAAI;IACR,MAAMC,YAAYA,CAAA,EAAG;MACnB,MAAMC,eAAc,GAAI;QACtBR,EAAC,EAAI,IAAI,CAACA,EAAE;QACZC,YAAW,EAAI,IAAI,CAACA,YAAY;QAChCC,WAAU,EAAI,IAAI,CAACA,WAAW;QAC9BC,QAAO,EAAI,IAAI,CAACA;MAClB;MAEA,MAAMP,KAAK,CAAC;QACVa,MAAM,EAAE,MAAM;QACdC,GAAG,EAAE,IAAI,CAACC,OAAO,GAAC,kBAAkB,GAAC,IAAI,CAACX,EAAE;QAC5CD,IAAG,EAAIa,IAAI,CAACC,SAAS,CAACL,eAAe,CAAC;QACtCM,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,EACAC,IAAI,CAAC,MAAM;QACVjB,IAAI,CAAC;UACHkB,IAAI,EAAE,gCAAgC;UACtCC,IAAI,EAAE,SAAS;UACfC,mBAAmB,EAAE;QACvB,CAAC,CAAC;MACJ,CAAC,EACAC,KAAK,CAACC,GAAE,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;IACjC;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACvB,EAAC,GAAI,IAAI,CAACwB,MAAM,CAACC,MAAM,CAACzB,EAAE;IAC/B,IAAI,CAAC0B,QAAO,GAAI,IAAI,CAACC,UAAU,CAACC,MAAM,CAACF,QAAO,IAAKA,QAAQ,CAAC1B,EAAC,IAAK,IAAI,CAACA,EAAE,CAAC,CAAC,CAAC,CAAC;IAC7E,IAAI,CAACC,YAAW,GAAI,IAAI,CAACyB,QAAQ,CAACzB,YAAY;IAC9C,IAAI,CAACC,WAAU,GAAI,IAAI,CAACwB,QAAQ,CAACxB,WAAW;IAC5C,IAAI,CAACC,QAAO,GAAI,IAAI,CAACuB,QAAQ,CAACvB,QAAQ;EACxC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}