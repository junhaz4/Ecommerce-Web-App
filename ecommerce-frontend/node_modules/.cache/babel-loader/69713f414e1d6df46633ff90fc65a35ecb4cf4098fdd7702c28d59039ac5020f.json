{"ast":null,"code":"const axios = require('axios');\nimport swal from 'sweetalert';\nexport default {\n  name: 'Signup',\n  props: [\"baseURL\"],\n  data() {\n    return {\n      email: null,\n      firstName: null,\n      lastName: null,\n      password: null,\n      passwordConfirm: null\n    };\n  },\n  methods: {\n    async signup(e) {\n      e.preventDefault();\n      // if the password matches\n      if (this.password === this.passwordConfirm) {\n        // make the post body\n        const user = {\n          email: this.email,\n          firstName: this.firstName,\n          lastName: this.lastName,\n          password: this.password\n        };\n\n        // call the API\n        await axios({\n          method: 'post',\n          url: this.baseURL + \"user/signup\",\n          data: JSON.stringify(user),\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(() => {\n          // redirect to home page\n          this.$router.replace(\"/\");\n          swal({\n            text: \"User signup successful. Please Login\",\n            icon: \"success\",\n            closeOnClickOutside: false\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        // passwords are not matching\n        swal({\n          text: \"Error! Passwords are not matching\",\n          icon: \"error\",\n          closeOnClickOutside: false\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","require","swal","name","props","data","email","firstName","lastName","password","passwordConfirm","methods","signup","e","preventDefault","user","method","url","baseURL","JSON","stringify","headers","then","$router","replace","text","icon","closeOnClickOutside","catch","err","console","log"],"sources":["/Users/lawrencezhang/Desktop/ecommerce-ui/src/views/Signup.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <!--    Link to Home-->\n        <div class=\"row\">\n            <div class=\"col-12 text-center pt-3\">\n                <router-link :to=\"{name : 'Home'}\">\n                    <img id=\"logo\" src=\"../assets/icon.png\" />\n                </router-link>\n            </div>\n        </div>\n        <!--   Sign up form-->\n        <div class=\"row\">\n            <div class=\"col-12 justify-content-center d-flex flex-row pt-5\">\n                <div id=\"signup-div\" class=\"flex-item border\">\n                    <h2 class=\"pt-4 pl-4\">Create Account</h2>\n                    <form @submit=\"signup\" class=\"pt-4 pl-4 pr-4\">\n                        <div class=\"form-group\">\n                            <label>Email</label>\n                            <input type=\"email\" class=\"form-control\" v-model=\"email\" required>\n                        </div>\n                        <div class=\"form-row\">\n                            <div class=\"col\">\n                                <div class=\"form-group\">\n                                    <label>First Name</label>\n                                    <input type=\"name\" class=\"form-control\" v-model=\"firstName\" required>\n                                </div>\n                            </div>\n                            <div class=\"col\">\n                                <div class=\"form-group\">\n                                    <label>Last Name</label>\n                                    <input type=\"name\" class=\"form-control\" v-model=\"lastName\" required>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Password</label>\n                            <input type=\"password\" class=\"form-control\" v-model=\"password\" required>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Confirm Password</label>\n                            <input type=\"password\" class=\"form-control\" v-model=\"passwordConfirm\" required>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary mt-2 py-0\">Create Account</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nconst axios = require('axios')\nimport swal from 'sweetalert';\nexport default {\n    name: 'Signup',\n    props : [\"baseURL\"],\n    data() {\n        return {\n            email: null,\n            firstName: null,\n            lastName: null,\n            password: null,\n            passwordConfirm: null\n        }\n    },\n    methods : {\n        async signup(e) {\n            e.preventDefault();\n            // if the password matches\n            if (this.password === this.passwordConfirm) {\n\n                // make the post body\n                const user = {\n                    email: this.email,\n                    firstName: this.firstName,\n                    lastName: this.lastName,\n                    password: this.password\n                }\n\n                // call the API\n                await axios({\n                    method : 'post',\n                    url : this.baseURL + \"user/signup\",\n                    data : JSON.stringify(user),\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                })\n                .then(() => {\n                    // redirect to home page\n                    this.$router.replace(\"/\");\n                    swal({\n                        text: \"User signup successful. Please Login\",\n                        icon: \"success\",\n                        closeOnClickOutside: false,\n                    });\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n            } else {\n                // passwords are not matching\n                swal({\n                    text: \"Error! Passwords are not matching\",\n                    icon: \"error\",\n                    closeOnClickOutside: false,\n                });\n            }\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n.btn-dark {\n    background-color: #e7e9ec;\n    color: #000;\n    font-size: smaller;\n    border-radius: 0;\n    border-color: #adb1b8 #a2a6ac #a2a6ac;\n}\n\n.btn-primary {\n    background-color: #f0c14b;\n    color: black;\n    border-color: #a88734 #9c7e31 #846a29;\n    border-radius: 0;\n}\n\n#logo {\n    width: 150px;\n}\n\n@media only screen and (min-width: 992px) {\n    #signup-div {\n        width: 40%;\n    }\n}\n</style>\n"],"mappings":"AAkDA,MAAMA,KAAI,GAAIC,OAAO,CAAC,OAAO;AAC7B,OAAOC,IAAG,MAAO,YAAY;AAC7B,eAAe;EACXC,IAAI,EAAE,QAAQ;EACdC,KAAI,EAAI,CAAC,SAAS,CAAC;EACnBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,IAAI;MACXC,SAAS,EAAE,IAAI;MACfC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,IAAI;MACdC,eAAe,EAAE;IACrB;EACJ,CAAC;EACDC,OAAM,EAAI;IACN,MAAMC,MAAMA,CAACC,CAAC,EAAE;MACZA,CAAC,CAACC,cAAc,EAAE;MAClB;MACA,IAAI,IAAI,CAACL,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAExC;QACA,MAAMK,IAAG,GAAI;UACTT,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,SAAS,EAAE,IAAI,CAACA,SAAS;UACzBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBC,QAAQ,EAAE,IAAI,CAACA;QACnB;;QAEA;QACA,MAAMT,KAAK,CAAC;UACRgB,MAAK,EAAI,MAAM;UACfC,GAAE,EAAI,IAAI,CAACC,OAAM,GAAI,aAAa;UAClCb,IAAG,EAAIc,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;UAC3BM,OAAO,EAAE;YACL,cAAc,EAAE;UACpB;QACJ,CAAC,EACAC,IAAI,CAAC,MAAM;UACR;UACA,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,GAAG,CAAC;UACzBtB,IAAI,CAAC;YACDuB,IAAI,EAAE,sCAAsC;YAC5CC,IAAI,EAAE,SAAS;YACfC,mBAAmB,EAAE;UACzB,CAAC,CAAC;QACN,CAAC,EACAC,KAAK,CAACC,GAAE,IAAK;UACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QACpB,CAAC,CAAC;MACN,OAAO;QACH;QACA3B,IAAI,CAAC;UACDuB,IAAI,EAAE,mCAAmC;UACzCC,IAAI,EAAE,OAAO;UACbC,mBAAmB,EAAE;QACzB,CAAC,CAAC;MACN;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}